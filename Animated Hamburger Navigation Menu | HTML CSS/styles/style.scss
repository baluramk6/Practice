//Default seting reset
* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  body {
    width: 100%;
    height: 100vh;
    display: grid;
    place-items: center;
    background-color: darkgrey;
    color: white;
    font-family: sans-serif;
    input[type="checkbox"] {
      display: none;
    }
  }
}

//This is varible for we can change acording our needs
$width: 100px;
$height: 10px;
$margin: 10px;
$time: 1s;
$fontSize: 20px;

//Template for the CSS FlexBox model
@mixin flex($dir, $jus, $ali) {
  display: flex;
  direction: $dir;
  justify-content: $jus;
  align-items: $ali;
}

//Styling for .line class
.lines {
  z-index: 1;
  cursor: pointer;
  [class^="line-"] {
    width: $width;
    height: $height;
    background-color: aquamarine;
    margin: $margin 0;
    transition: $time ease;
  }
}

//This is for hamburger Menu toggle on & off
#menu-active:checked ~ label {
  .line-1 {
    transform: translateY($height + $margin) rotate(45deg);
  }
  .line-2 {
    transform: scale(0);
  }
  .line-3 {
    transform: translateY(-($height + $margin)) rotate(-45deg);
  }
}

//Styling configuration for the .menu class
//This is the main container that hold the 3 sections
//The (.items.first) , label & (.items.last)
.menu {
  @include flex(row, null, null);
}

//Stying for the checkbox label
label {
  @include flex(row, null, null);
}

//Stying of the .items class(includes both first and last classes)
.items {
  z-index: 0;
  @include flex(row, center, center);
  font-size: $fontSize;
  font-weight: 700;
  transition: all 1s ease;
  [class^="i-"] {
    margin: 0 $margin;
    cursor: pointer;
    transition: 0.6s ease;
    &:hover {
      color: aquamarine;
    }
  }
}

//Configuring the initial postion of .first and .last class - menu items
.first {
  transform: translateX(100px);
  opacity: 0;
}
.last {
  transform: translateX(-100px);
  opacity: 0;
}

//This is for transitions menu items on and off
#menu-active:checked {
  & ~ .first {
    transform: translateX(0px);
    opacity: 1;
  }
  & ~ .last {
    transform: translateX(0px);
    opacity: 1;
  }
}
